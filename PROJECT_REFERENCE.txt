# XR TECH TOOLS - GUIDE DÉVELOPPEUR

> **Note** : Ce document complète le README.md avec des informations techniques détaillées pour les développeurs.  
> Voir [README.md](README.md) pour la vue d'ensemble du projet.  
> Voir [CHANGELOG.md](CHANGELOG.md) pour l'historique des versions.

---

## 🎯 PÉRIMÈTRE & OBJECTIFS

### Double Usage
**Pour les Apprenants (IDI, ADRN, TIP)** :
- S'entraîner sur cas pratiques réels
- Développer compétences techniques
- Se préparer aux certifications RNCP

**Pour les Professionnels** :
- Outils de conversion et calcul rapides
- Références techniques (BIOS, hardware)
- Guides de diagnostic et procédures

### Titres Professionnels Visés
- **IDI** - Installateur Dépanneur en Informatique (RNCP34147)
- **ADRN** - Agent De Reconditionnement en appareil Numérique (RNCP38718)
- **TIP** - Technicien Informatique de Proximité (RNCP40799)

---

## 🏗️ ARCHITECTURE TECHNIQUE

### Structure du Projet
```
lib/
├── main.dart
├── models/
│   ├── commercial_scenario.dart
│   ├── fault_scenario.dart
│   └── tool.dart
├── data/
│   ├── commercial_scenarios_data.dart (100 scénarios)
│   ├── fault_scenarios_data.dart (14 pannes)
│   └── tool_data.dart
├── services/
│   ├── commercial_scenario_service.dart
│   └── fault_scenario_service.dart
├── screens/
│   ├── introduction_screen.dart
│   ├── dashboard_screen.dart
│   ├── commercial_scenario_screen.dart
│   ├── fault_creator_screen.dart
│   └── scenarios_picker_screen.dart
└── widgets/
    ├── app_footer.dart
    ├── animated_start_button.dart
    └── tool_tile.dart
```

### Dépendances Clés
```yaml
dependencies:
  flutter:
    sdk: flutter
  url_launcher: ^6.x.x
  shared_preferences: ^2.x.x
```

### Gestion d'État
- **Architecture** : Décentralisée
- **Principe** : Chaque écran gère ses propres statistiques
- **Persistance** : SharedPreferences (pas de state management global)
- **Avantage** : Autonomie et maintenabilité de chaque fonctionnalité

---

## ⚠️ CONTRAINTES TECHNIQUES IMPORTANTES

### Environnement Web/Artifacts
```
❌ PAS de localStorage/sessionStorage
❌ PAS de window.localStorage
✅ SharedPreferences pour persistance
✅ État géré en mémoire (setState, variables)
```

### Format Footer
```
Format accepté : MAJEURE.MINEURE ou MAJEURE.MINEURE.JJMMAA
Exemples : v1.2.0 ou v1.3.300925
```

### Timer
```
⚠️ Le timer (30 min) reste EN MÉMOIRE uniquement
❌ Pas de persistance entre sessions
```

---

## 📝 GUIDELINES DE CONTENU

### Scénarios Commerciaux (100 scénarios)

**PÉRIMÈTRE STRICT** :
- ✅ Conseil et vente en magasin informatique
- ✅ Matériel grand public (PC, tablettes, smartphones, périphériques)
- ✅ Budgets réalistes : 50€ à 1500€ généralement
- ✅ Situations magasin/comptoir
- ✅ Clients : particuliers ou petites entreprises
- ❌ PAS de dépannage technique
- ❌ PAS de matériel professionnel haut de gamme

**Compétences visées** :
- Écoute active et reformulation
- Identification des besoins
- Conseil adapté au profil client
- Argumentation commerciale
- Gestion du budget
- Transversales aux 3 titres RNCP (IDI, ADRN, TIP)

**Structure d'un scénario** :
```dart
{
  id: int,                    // 1-100
  clientProfile: String,      // Type de client
  clientRequest: String,      // Demande formulée
  budgetInfo: String,         // Contrainte budgétaire
  clientAttitude: String,     // Comportement/état d'esprit
  difficulty: String,         // easy/medium/hard
  keyQuestions: List<String>, // Questions à poser
  solutions: List<Solution>,  // Produits recommandés (prix, avantages, URL)
  commonTraps: List<String>,  // Pièges à éviter
  skillsWorked: List<String>  // Compétences RNCP mobilisées
}
```

**Exemples de scénarios types** :
- Étudiant cherche PC portable pour la fac
- Parent veut tablette pour enfant 8 ans
- Auto-entrepreneur équipe son bureau
- Gamer cherche écran 144Hz
- Senior veut ordinateur simple d'utilisation
- Famille avec budget limité (300€ max)

**URLs produits** :
- Utiliser des liens réels vers fabricants/revendeurs
- Vérifier la validité des URLs régulièrement
- Préférer les grandes enseignes (Logitech, Dell, HP, etc.)

### Mode Créateur de Pannes (14 pannes)

**Catégories** :
- Matériel
- Logiciel
- BIOS/UEFI
- Réseau
- Impression
- Périphérique

**Niveaux** :
- Facile : 4 pannes
- Moyen : 6 pannes
- Difficile : 4 pannes

**Objectif pédagogique** :
- Apprentissage du diagnostic méthodique
- Création de pannes pour ateliers pratiques
- Instructions détaillées étape par étape
- Conseils de simulation réaliste

---

## 🎨 DESIGN & THÈME

### Palette de Couleurs
```
Couleur principale : Bleu #00B0FF
Palette complète : 10 nuances (50 à 900)
```

### Spécifications d'Affichage
```
Portrait : 480 × 1080 pixels
Paysage : 1080 × 480 pixels
Device pixel ratio : 3.0
User agent : Mobile (Android)
```

### Principes UX
- Design compact et responsive
- Footer présent sur tous les écrans
- Grille adaptative (2-3 colonnes selon taille)
- Animations fluides et feedback haptique
- Mode immersif (barre de statut visible)

---

## 🔄 WORKFLOW AVEC CLAUDE (IA)

### Comment utiliser ce document

**Pour développer un nouvel outil** :
```
"Voici PROJECT_REFERENCE.txt du dépôt GitHub.
Je veux développer l'outil [NOM] pour usage [pédagogique/professionnel/double].
Titre(s) RNCP concerné(s) : [IDI/ADRN/TIP]."
```

**Pour ajouter des scénarios** :
```
"Voici PROJECT_REFERENCE.txt du dépôt GitHub.
Je veux ajouter [N] scénarios commerciaux niveau [facile/moyen/difficile]
axés sur les compétences [IDI/ADRN/TIP]."
```

**Pour modifier l'UI** :
```
"Voici PROJECT_REFERENCE.txt et le fichier [nom_fichier.dart].
Je veux modifier [description de la modification UX]."
```

**Pour corriger un bug** :
```
"Voici PROJECT_REFERENCE.txt.
Bug observé : [description]
Fichier(s) concerné(s) : [liste]"
```

---

## 🚀 AMÉLIORATIONS FUTURES SUGGÉRÉES

### Fonctionnalités
- Développement des 8 outils restants
- Historique des scénarios tirés
- Mode révision des scénarios échoués
- Filtres par type de client ou matériel
- Filtres par titre RNCP concerné
- Export/import des statistiques
- Badges de progression

### UX/UI
- Thème sombre
- Personnalisation des couleurs
- Animations avancées
- Mode hors ligne complet

### Technique
- Tests unitaires et d'intégration
- CI/CD automatisé
- Documentation API
- Optimisation des performances

---

## 📞 CONTACT & SUPPORT

- **Email** : WolwX@hotmail.com
- **GitHub** : https://github.com/WolwX/xr-tech-tools
- **Issues** : https://github.com/WolwX/xr-tech-tools/issues

---

## 📋 OUTILS - STATUT DÉTAILLÉ

### ✅ Fonctionnels (2/10)
1. **Scénarios Commerciaux** - Complet
   - 100 scénarios (33 faciles, 45 moyens, 22 difficiles)
   - Mode Classique + Mode Défi (Chifoumi)
   - Sélection avancée (par numéro, par difficulté)
   - Timer 30 min, correction détaillée, stats persistantes
   
2. **Mode Créateur de Pannes** - Complet
   - 14 pannes (4 faciles, 6 moyennes, 4 difficiles)
   - 6 catégories techniques
   - Instructions de création détaillées
   - Statistiques décentralisées

### 🚧 En Développement (8/10)

**Outils à double usage (pédago + pro)** :
3. Conversion Unités XR - Métriques XR (FOV, PPD, etc.)
4. Calculateur Espace Disque - Conversions Mo/Go/To
5. Touches BIOS/BOOT - Référence par fabricant
6. Fiches Hardware XR - Spécifications techniques
7. Liens Utiles - Ressources externes

**Outils principalement pédagogiques** :
8. Procédures Techniques - Guides pas-à-pas illustrés
9. QCM - Tests de connaissances par module
10. Diagnostic Pannes - Guide interactif de résolution

---

*Document maintenu par : XR (Xavier Redondo) avec l'assistance de Claude (Anthropic)*  
*Dernière mise à jour : 01/10/2025*
